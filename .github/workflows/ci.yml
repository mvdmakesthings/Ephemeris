name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: List available simulators
      run: xcrun simctl list devices available
      
    - name: Select iOS Simulator
      id: select-simulator
      run: |
        # Find an available iPhone simulator
        SIMULATOR=$(xcrun simctl list devices available | grep "iPhone" | grep -v "unavailable" | head -1 | sed -E 's/.*iPhone ([0-9]+[^)]*).*/iPhone \1/' | xargs)
        if [ -z "$SIMULATOR" ]; then
          # Fallback to any iPhone
          SIMULATOR="iPhone 15 Pro"
        fi
        echo "Selected simulator: $SIMULATOR"
        echo "simulator=$SIMULATOR" >> $GITHUB_OUTPUT
        
    - name: Build framework
      run: |
        xcodebuild build \
          -project Ephemeris.xcodeproj \
          -scheme Ephemeris \
          -sdk iphonesimulator \
          -destination "platform=iOS Simulator,name=${{ steps.select-simulator.outputs.simulator }}" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Run tests with coverage
      run: |
        xcodebuild test \
          -project Ephemeris.xcodeproj \
          -scheme Ephemeris \
          -sdk iphonesimulator \
          -destination "platform=iOS Simulator,name=${{ steps.select-simulator.outputs.simulator }}" \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults.xcresult \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Generate coverage report
      run: |
        xcrun xccov view --report --json TestResults.xcresult > coverage.json || true
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.json
        fail_ci_if_error: false
        verbose: true
      continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging || true
